version: '3.8'

services:
  db:
    image: postgres:16
    container_name: postgres_service
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_USER: postgres
      POSTGRES_DB: company148
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/initialization:/docker-entrypoint-initdb.d/
    secrets:
      - db-password

  redis:
    image: redis:6
    container_name: redis_service
    ports:
      - "6379:6379"

  data_analysis:
    build:
      context: ./data_analysis
    image: data_analysis_image
    container_name: data_analysis_service
    depends_on:
      - db
    environment:
      DB_PASSWORD_FILE: /run/secrets/db-password
      DB_HOST: db
    secrets:
      - db-password
    volumes:
      - shared-data:/app/data_analysis/files
      - ./data_analysis:/app/data_analysis
    restart: "no"

  flask-api:
    build:
      context: ./flask-api
    container_name: flask_api_service
    depends_on:
      - db
      - data_analysis
      - redis
    volumes:
      - ./data_analysis:/app/data_analysis
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5000:5000"

  celery-worker:
    build:
      context: ./flask-api
    container_name: celery_worker_service
    depends_on:
      - flask-api
      - redis
    volumes:
      - ./data_analysis:/app/data_analysis
      - /var/run/docker.sock:/var/run/docker.sock
    command: celery -A celery_worker.celery worker --loglevel=info

  react-ui:
    build:
      context: ./react-ui
    container_name: react_ui_service
    depends_on:
      - flask-api
    ports:
      - "3001:3000"

volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/database/postgres-volume

  shared-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data_analysis/files

secrets:
  db-password:
    file: ./database/db-password
